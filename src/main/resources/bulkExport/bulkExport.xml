<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2024, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~ WSO2 Inc. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  ~
  -->

<template name="bulkExport" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="level"/>
    <parameter name="_outputFormat"/>
    <parameter name="_since"/>
    <parameter name="_type"/>
    <parameter name="_typeFilter"/>
    <parameter name="urlRewriteContentLocation"/>
    <parameter name="statusApiContext"/>
    <parameter name="accessControl"/>
    <parameter name="claimOne"/>
    <parameter name="claimTwo"/>
    <parameter name="groupId"/>
    <sequence>
        <filter source="boolean($ctx:_OH_INTERNAL_FHIR_REPO_ACCESS_TOKEN_)" regex="true">
            <then>
                <header name="Authorization" expression="fn:concat('Bearer ', $ctx:_OH_INTERNAL_FHIR_REPO_ACCESS_TOKEN_)"
                        scope = "transport" />
            </then>
            <else>
                <log category="ERROR" description="FAULT" level="custom">
                    <property name="ERROR" value="Access token is not there. Authorization issue will occur"/>
                </log>
                <class name="org.wso2.healthcare.integration.common.mediators.FHIRSynapseExceptionHanlder">
                    <property name="errorSeverity" value="error"/>
                    <property name="errorCode" value="login"/>
                    <property name="errorDetailCode" value="Login Required"/>
                    <property name="errorDetailSystem" value="Access token is not there. Authorization issue will occur."/>
                    <property name="errorDiagnostic" value="Authentication failed."/>
                </class>
            </else>
        </filter>

        <filter source="boolean($func:statusApiContext)" regex="true">
            <then>
                <filter source="fn:starts-with($func:statusApiContext, '/')" regex="true">
                    <then>
                        <property name="_OH_INTERNAL_FHIR_REPO_STATUS_API_CONTEXT_" expression="$func:statusApiContext"/>
                    </then>
                    <else>
                        <property name="_OH_INTERNAL_FHIR_REPO_STATUS_API_CONTEXT_"
                                  expression="fn:concat('/', $func:statusApiContext)"/>
                    </else>
                </filter>
            </then>
        </filter>

        <class name="org.wso2.healthcare.integration.fhir.repository.ExportQueryBuilder"/>

        <header name="Accept" scope="transport" value="application/fhir+json" action="set"/>
        <header name="Prefer" scope="transport" value="respond-async" action="set"/>

        <switch source="$func:level">
            <case regex="Patient">
                <property name="uri.var.Level" value="Patient/"/>
            </case>
            <case regex="Group">
                <filter source="boolean($func:groupId)" regex="false">
                    <then>
                        <log category="ERROR" description="FAULT" level="custom">
                            <property name="ERROR" value="Group ID unavailable for a group-level export."/>
                        </log>
                        <class name="org.wso2.healthcare.integration.common.mediators.FHIRSynapseExceptionHanlder">
                            <property name="errorSeverity" value="error"/>
                            <property name="errorCode" value="export"/>
                            <property name="errorDetailCode" value="Group ID Required"/>
                            <property name="errorDetailSystem" value="Group ID unavailable for a group-level export."/>
                            <property name="errorDiagnostic" value="Export failed."/>
                        </class>
                    </then>
                </filter>
                <property name="uri.var.Level" expression="fn:concat('Group/', $func:groupId, '/')"/>
            </case>
            <default>
                <property name="uri.var.Level" value=""/>
            </default>
        </switch>

        <call>
            <endpoint>
                <http method="GET" uri-template="{uri.var._OH_INTERNAL_FHIR_REPO_BASE_}/{+uri.var.Level}$export{+uri.var.urlQuery}"/>
            </endpoint>
        </call>

        <filter source="$axis2:HTTP_SC" regex="202">
            <then>
                <!-- rewrite url if enabled -->
                <filter source="$func:urlRewriteContentLocation" regex="true">
                    <then>
                        <!-- extract out the content location on server -->
                        <property
                                expression="fn:substring-after($trp:Content-Location, $ctx:uri.var._OH_INTERNAL_FHIR_REPO_BASE_)"
                                name="_OH_INTERNAL_FHIR_REPO_CONTENT_LOCATION_"
                                scope="default" type="STRING"/>
                        <property name="TRANSPORT_HEADERS" action="remove" scope="axis2"/>
                        <!-- append server url and the status api context-->
                        <property
                                expression="fn:concat($ctx:_OH_INTERNAL_FHIR_SERVER_URL_, $ctx:_OH_INTERNAL_FHIR_REPO_STATUS_API_CONTEXT_, $ctx:_OH_INTERNAL_FHIR_REPO_CONTENT_LOCATION_)"
                                name="Content-Location"
                                scope="transport"
                                type="STRING"/>
                        <!-- engage access control if enabled-->
                        <filter source="$func:accessControl" regex="true">
                            <then>
                                <!-- throw error if both ids are empty -->
                                <filter source="boolean($func:claimOne) and boolean($func:claimTwo)"
                                        regex="false">
                                    <then>
                                        <log category="ERROR" description="FAULT" level="custom">
                                            <property name="ERROR"
                                                      value="Both unique IDs for access control cannot be empty"/>
                                        </log>
                                        <class name="org.wso2.healthcare.integration.common.mediators.FHIRSynapseExceptionHanlder">
                                            <property name="errorSeverity" value="error"/>
                                            <property name="errorCode" value="export"/>
                                            <property name="errorDetailCode" value="IDs for Access Control Required"/>
                                            <property name="errorDetailSystem"
                                                      value="Values required for providing access control of the content location are missing."/>
                                            <property name="errorDiagnostic" value="Access control failed."/>
                                        </class>
                                    </then>
                                </filter>
                                <property name="_OH_INTERNAL_FHIR_REPO_UNIQUE_ID_ONE_" expression="$func:claimOne"
                                          type="STRING"/>
                                <property name="_OH_INTERNAL_FHIR_REPO_UNIQUE_ID_TWO_" expression="$func:claimTwo"
                                          type="STRING"/>
                                <class name="org.wso2.healthcare.integration.fhir.repository.ClientToContentLocationMapper"/>
                                <property
                                        expression="fn:concat($trp:Content-Location, '?token=', $ctx:_OH_INTERNAL_FHIR_REPO_TOKEN_)"
                                        name="Content-Location"
                                        scope="transport"
                                        type="STRING"/>
                            </then>
                        </filter>
                    </then>
                </filter>
            </then>
        </filter>
    </sequence>
</template>
